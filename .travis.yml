language: rust
sudo: false


# Cache `cargo install`ed tools, but don't cache the project's `target`
# directory (which ends up over-caching and filling all disk space!)
cache:
  directories:
    - /home/travis/.cargo

GH_TOKEN: &GH_TOKEN
  secure: DChat4HPZqoONfneyBjO9kMWHcgcGOxiDH1e3SPc6krm06wTMLqvFzr+8UpWVGU9US26m4Llql0xzMx22SniLp2Eus2ekn8EyoviJFlX6JxNzlb1hyI0Y0QwL6Euj9aU9yPZB9UtpPY1LdZEElsXjyi8mRGj6oD2wN7/1iUB2BgQ7wz+by6KODmT4lCUZeM/B4FjMt54SjaA+kM0Z8+A/d8n2n/FtEFF7TMVkhQeIDqzJObpjInzX0PupW/sGaMkzZGHHX+1niWiKJM0lwCIxISwLDWiwOYdhpWBMQrANuVWfswpVyaQR6tCwKeCWm5+F0733/j3n+4dYJHiXyx5VX2nf2s8Es0iO0QtkHAOLciTRVh4+hCPDjPNsVmKe74RYyD33c4UBDt92c+KFeIWaDS956vDXkZ45XxkiKWCzGTv+PaVgTo8mQ1lLrUrGiVO17QTbbqNWmgYnj3lsSwxYZ55ALUj9Lqz4zaWnizv7oGacfOeVMDmS8l9Ri848uU4sUA6S5QVDxUR0Z+tAQmQLRO510WMRm6waa6tHK13u++f/K7Jkpq9Y4b7q+ITwqRk87h7OpGRPtjMHQ7v5AvIs/4pnON2GF7a30h/Vd7IXBD5OBoc708ira4tmhzSO4umrz3zrolYnhX30gG84ZJJ4293U1myd62miqvBMpCAebw=
DEPLOY_TO_GITHUB: &DEPLOY_TO_GITHUB
  before_deploy:
    - git config --local user.name "Ebuka"
    - git config --local user.email "ebuka2264@yahoo.com"
    - name="sizer-$TRAVIS_TAG-$TARGET"
    - mkdir $name
    - cp target/release/sizer $name/
    - cp README.md LICENSE-MIT LICENSE-APACHE $name/
    - tar czvf $name.tar.gz $name
  deploy:
    provider: releases
    api_key: *GH_TOKEN
    file: sizer-$TRAVIS_TAG-$TARGET.tar.gz
    skip_cleanup: true
    on:
      branch: main
      tags: true

matrix:
  include:

  - name: Tests
    env: RUST_BACKTRACE=1
    rust: nightly
    addons:
      firefox: latest
      chrome: stable
    install:
      - *INSTALL_NODE_VIA_NVM
    script:
    - cargo test --locked
    - rustup component add rustfmt-preview
    - cargo fmt --version
    - cargo fmt --all -- --check

  - name: Book
    rust: stable
    before_script:
    - (test -x $HOME/.cargo/bin/cargo-install-update || cargo install cargo-update)
    - (test -x $HOME/.cargo/bin/mdbook || cargo install --vers "^0.2" mdbook)
    - cargo install-update -a
    script:
    - (cd docs && mdbook build)
    - rustc ./docs/_installer/build-installer.rs
    - ./build-installer
    deploy:
      provider: pages
      skip-cleanup: true
      github-token: *GH_TOKEN
      local-dir: docs
      keep-history: false
      on:
        branch: master

  - name: Linux Binary
    env: TARGET=x86_64-unknown-linux-musl
    rust: nightly
    before_script: rustup target add $TARGET
    script: cargo build --release --target $TARGET --locked --features vendored-openssl
    addons:
      apt:
        packages:
          - musl-tools
    <<: *DEPLOY_TO_GITHUB

  - name: macOS Binary
    env: MACOSX_DEPLOYMENT_TARGET=10.7 TARGET=x86_64-apple-darwin
    os: osx
    rust: nightly
    script: cargo build --release --target $TARGET --locked
    install: true
    <<: *DEPLOY_TO_GITHUB

notifications:
  email:
    on_success: never